version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:17-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: infra_switchs_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d infra_switchs_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicação principal (contém todas as apps)
  app:
    build: .
    container_name: multi_app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:123456@postgres:5432/infra_switchs_db
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=infra_switchs_db
      - DB_USER=postgres
      - DB_PASSWORD=123456
    ports:
      - "80:80"     # Nginx (frontend)
      - "3000:3000" # API Express
      - "5000:5000" # Flask API
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      # Para desenvolvimento, descomente a linha abaixo:
      # - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge